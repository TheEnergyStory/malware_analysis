using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace ChaperoneServiceMonitor
{
	public static class Crypt
	{
		public static string DecryptString(byte[] data)
		{
			byte[] bytes = Crypt.Decrypt(data);
			return Encoding.Unicode.GetString(bytes);
		}

		private static byte[] Decrypt(byte[] data)
		{
			byte[] key = new byte[]
			{
				117,
				37,
				145,
				84,
				164,
				99,
				32,
				73,
				153,
				188,
				105,
				20,
				93,
				55,
				214,
				47,
				131,
				145,
				122,
				128,
				14,
				137,
				58,
				163
			};
			return Crypt.EncryptOutput(key, data).ToArray<byte>();
		}

		private static byte[] EncryptInitalize(byte[] key)
		{
			byte[] array = (from i in Enumerable.Range(0, 256)
			select (byte)i).ToArray<byte>();
			int j = 0;
			int num = 0;
			while (j < 256)
			{
				num = (num + (int)key[j % key.Length] + (int)array[j] & 255);
				Crypt.Swap(array, j, num);
				j++;
			}
			return array;
		}

		private static IEnumerable<byte> EncryptOutput(byte[] key, IEnumerable<byte> data)
		{
			byte[] s = Crypt.EncryptInitalize(key);
			int i = 0;
			int j = 0;
			return data.Select(delegate(byte b)
			{
				i = (i + 1 & 255);
				j = (j + (int)s[i] & 255);
				Crypt.Swap(s, i, j);
				return b ^ s[(int)(s[i] + s[j] & byte.MaxValue)];
			});
		}

		private static void Swap(byte[] s, int i, int j)
		{
			byte b = s[i];
			s[i] = s[j];
			s[j] = b;
		}
	}
}
